#include <bits/stdc++.h>
 
using namespace std;
 
const long long INF = 999999999999;
long long n, m, k, b, x, i, j, a[100500], dp[100500], pr[100500];
stack <long long> st;
 
bool cmp(long long x, long long y)
{
    return a[x] < a[y];
}
 
long long BinS(long long L, long long R, long long x)
{
    long long C = (L + R) / 2;
    while(L < R)
    {
        //cout << L << " " << R << endl;
        C = (L + R) / 2;
        //cout << dp[C] << endl;
        if(a[dp[C]] < x)
            L = C + 1;
        else
            R = C;
    }
 
    return R;
}
 
int main()
{
    //freopen("output.txt", "w", stdout);
    freopen("input.txt", "r", stdin);
    cin >> n >> a[1] >> k >> b >> m;
    dp[1] = n + 1;
    for(i = 2; i <= n; i++)
    {
        a[i] = (k * a[i - 1] + b) % m;
        dp[i] = n + 1;
    }
    a[n + 1] = INF;
    a[0] = -INF;
    dp[0] = 0;
    for(i = 1; i <= n; i++)
    {
        //j = lower_bound(dp, dp + n + 1, a[i], cmp) - dp;
        j = BinS(0, n + 1, a[i]);
        if(j == 1)
            pr[i] = 0;
        else
            pr[i] = dp[j - 1];
            dp[j] = i;
    }
    for(i = n; i >= 0; i--)
        if(dp[i] != n + 1)
        {
            //cout << i << endl;
            break;
        }
    for (x = dp[i]; x > 0; x = pr[x])
        st.push(a[x]);
    while(!st.empty())
    {
        cout << st.top() << ' ';
        st.pop();
    }
    /*
    for(i = 1; i <= n; i++)
        cout << a[i] << ' ';
    cout << endl;
    for(i = 0; i < n; i++)
        cout << dp[i] << ' ';
    cout << endl;*/
    return 0;
}

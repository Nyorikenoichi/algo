#include <bits/stdc++.h>

using namespace std;

vector <long> g[5000];
vector <long> p;
long a, v, r, x, y, komp = 0, maxk, mink;
vector < pair <long, long> > k;

long prov(long x)
{
    if (p[x] != 0)
        return 0;
    p[x] = 1;
    long y = 1;
    for (long i = 0; i < g[x].size(); i++)
        if(p[g[x][i]] == 0)
            y += prov(g[x][i]);

    return y;
}

bool cmp(pair<long, long> a, pair<long, long> b)
{
    return(a.second > b.second);
}

int main()
{
    freopen("input.txt", "r", stdin);
    cin >> v >> r >> a;
    p.resize(v); k.resize(v);
    for(long i = 1; i <= v; i++)
        p[i] = 0;

    for(long i = 1; i <= r; i++)
    {
        cin >> x >> y;
        g[x].push_back(y);
        g[y].push_back(x);
    }
    for(long i = 1; i <= v; i++)
    {
        x = prov(i);
        if(x)
        {
            k[komp].first = komp;
            k[komp].second = x;
            komp++;
        }
    }
    k.resize(komp);
    sort(k.begin(), k.end(), cmp);
    mink = max(long(1), komp - a);
    long i = 0; maxk = komp;
    while(a > 0)
    {
        a -= k[i].second * k[i + 1].second;
        k[i + 1].second = k[i + 1].second + k[i].second;
        i++; maxk--;
    }
    cout << komp << ' ' << mink << ' ' << maxk;
    return 0;
}
